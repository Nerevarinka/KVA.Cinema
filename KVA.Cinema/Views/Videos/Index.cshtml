@model IEnumerable<KVA.Cinema.Models.ViewModels.Video.VideoDisplayViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<h1>Index</h1>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Preview)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleasedIn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LanguageName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GenreNames)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TagNames)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var video in Model)
        {
            <tr>
                <td>
                    @if (video.PreviewFileName != null)
                    {
                        <img src="~/upload/videoPreview/@video.PreviewFileName" alt="@video.Name preview" style="max-width: 5rem">
                    }
                    else
                    {
                        <img src="~/lib/other-icons/No-Image-Placeholder.svg" alt="No image" style="max-width: 5rem">
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => video.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => video.ReleasedIn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => video.LanguageName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => video.GenreNames)
                </td>
                <td>
                    @foreach (var tag in video.TagViewModels)
                    {
                        @Html.DisplayFor(model => tag, "_TagColor")
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { Id = video.Id }) |
                    @Html.ActionLink("Details", "Details", new { Id = video.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { Id = video.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}