@model KVA.Cinema.Models.ViewModels.Video.VideoDisplayViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<h1>Details</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Video</legend>
        <div style="display:flex">
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name)
                    @Html.DisplayFor(model => model.Name, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ReleasedIn)
                    @Html.DisplayFor(model => model.ReleasedIn, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CountryName)
                    @Html.DisplayFor(model => model.CountryName, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.GenresNames)
                    @Html.DisplayFor(model => model.GenresNames, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DirectorName)
                    @Html.DisplayFor(model => model.DirectorName, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PegiName)
                    @Html.DisplayFor(model => model.PegiName, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Length)
                    @Html.DisplayFor(model => model.Length, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LanguageName)
                    @Html.DisplayFor(model => model.LanguageName, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description)
                    @Html.DisplayFor(model => model.Description, additionalViewData: new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TagsViewModels)
                    @foreach (var tagDisplayViewModel in Model.TagsViewModels)
                    {
                        @Html.DisplayFor(model => tagDisplayViewModel, "_TagColor")
                    }
                </div>
            </div>

            <div>
                @if (Model.PreviewFileName != null)
                {
                <img src="~/upload/videoPreview/@Model.PreviewFileName" alt="@Model.Name preview" style="max-width:20rem; margin-left:10rem">
                }
                else
                {
                    <img src="~/lib/other-icons/No-Image-Placeholder.svg" alt="No image" style="max-width:20rem; margin-left:10rem">
                }
                @Html.ValidationMessageFor(model => model.Preview)
            </div>
        </div>

    </fieldset>

    <p>
        @Html.ActionLink("Edit", "Edit", "Videos", new { Id = Model.Id }) | @Html.ActionLink("Back to List", "Index")
    </p>
}

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}