@model KVA.Cinema.Models.ViewModels.Subscription.SubscriptionCreateViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<h1>Create</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

<fieldset>
    <legend>Subscription</legend>

    <div class="form-group">
        @Html.LabelFor(model => model.Title)
        @Html.EditorFor(model => model.Title, additionalViewData: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Title)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description)
        @Html.EditorFor(model => model.Description, additionalViewData: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Cost)
        @Html.EditorFor(model => model.Cost, additionalViewData: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Cost)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LevelId)
        @Html.DropDownListFor(model => model.LevelId, ViewBag.LevelId as SelectList)
        @Html.ValidationMessageFor(model => model.LevelId)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ReleasedIn)
        @Html.EditorFor(model => model.ReleasedIn, additionalViewData: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ReleasedIn)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Duration)
        @Html.EditorFor(model => model.Duration, additionalViewData: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Duration)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AvailableUntil)
        @Html.EditorFor(model => model.AvailableUntil, additionalViewData: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.AvailableUntil)
    </div>
</fieldset>

    <p>
        <input type="submit" value="Create" /> | @Html.ActionLink("Back to List", "Index")
    </p>
}

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}